# This is a basic workflow to help you get started with Actions

name: Ubuntu Touch build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the halium10 branch
  push:
    branches: [ halium10 ]
  pull_request:
    branches: [ halium10 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Update runner
        run: sudo apt update && sudo apt install gcc clang build-essential make simg2img ccache

      - name: Install mkbootimg
        run: |
            wget https://raw.githubusercontent.com/dandelion-dev/xiaomi-angelica-halium10/halium10/mkbootimg.py
            sudo mv mkbootimg.py /usr/bin/mkbootimg
            sudo chmod 777 /usr/bin/mkbootimg
            cd ~
      - name: Clone in our builder
        run: git clone https://github.com/muhammad23012009/samsung-a10dd
          
      - name: Start build
        run: ./build.sh -b out/
        
      - name: Prepare OTA
        run: ./build/prepare-fake-ota.sh out/device_a10dd.tar.xz ota && ./build/system-image-from-ota.sh ota/ubuntu_command out
        
      - run: echo Build Complete!
      - uses: actions/upload-artifact@v2
        with:
           name: Halium-boot
           path: out/boot.img
      - run: echo Uploading Artifacts
      - uses: actions/upload-artifact@v2
        with:
           name: Rootfs
           path: out/system.img
      - run: echo Uploading recovery
      - uses: actions/upload-artifact@v2
        with:
           name: Recovery-image
           path: out/recovery.img
